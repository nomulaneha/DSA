class Solution {
public:
    int results(int i, int target, vector<int>& coins, vector<vector<int>>& dp){
        if(i==0){
            return (target%coins[i]==0);
        }
        if(dp[i][target]!=-1) return dp[i][target];
        int nottake = results(i-1, target, coins, dp);
        int take = 0;
        if(coins[i]<=target) take = results(i, target-coins[i], coins, dp);
        return dp[i][target]=take+nottake;
    }
    int change(int amount, vector<int>& coins) {
        int n=coins.size();
        vector<vector<int>>dp(n, vector<int>(amount+1,-1));
        return results(n-1, amount, coins,dp);
    }
};