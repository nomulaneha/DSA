class Solution {
public:
    int results(vector<vector<int>>& triangle, int i, int j, vector<vector<int>>& dp){
        if(i==triangle.size()-1) return triangle[i][j];
        if(dp[i][j]!=-1) return dp[i][j];
        int d = triangle[i][j]+results(triangle, i+1, j, dp);
        int diag = triangle[i][j]+results(triangle, i+1, j+1, dp);
        return dp[i][j] = min(d, diag);
    }
    int minimumTotal(vector<vector<int>>& triangle) {
        int n = triangle.size();
        vector<int>front(n,0);
        vector<int>cur(n,0);
        for(int i=0;i<n;i++){
            front[i] = triangle[n-1][i];
        }
        for(int i=n-2;i>=0;i--){
            for(int j=i;j>=0;j--){
                int d = triangle[i][j]+front[j];
                int diag = triangle[i][j]+front[j+1];
                cur[j] = min(d, diag);
            }
            front = cur;
        }
        return front[0];
    }
};